@misc{CACE,
  title={{A Certifying Compiler for Zero-Knowledge Proofs of Knowledge Based on $\Sigma$-Protocols}},
  booktitle={IACR Eprint archive},
  keywords={implementation / Zero-Knowledge, Protocol Compiler, Formal Verification},
  url={http://eprint.iacr.org/2010/339},
  note={An extended abstract of this work will be presented at ESORICS 2010 stephan.krenn@bfh.ch; thomas.schneider@trust.rub.de 14825 received 10 Jun 2010, last revised 4 Aug 2010},
  authors={Jose Bacelar Almeida and Endre Bangerter and Manuel Barbosa and Stephan Krenn and Ahmad-Reza Sadeghi and Thomas Schneider},
  year=2010
} 

@INPROCEEDINGS{Bellare98ondefining,
    author = {Mihir Bellare and Oded Goldreich},
    title = {On Defining Proofs of Knowledge},
    booktitle = {},
    year = {1998},
    pages = {390--420},
    publisher = {Springer-Verlag}
}

@conference {zkpdl,
	title = {{ZKPDL}: A Language-based System for Efficient Zero-Knowledge Proofs and Electronic Cash},
	booktitle = {Proceedings of the {USENIX} Security Symposium},
	year = {2010},
	month = {August},
	address = {Washington, D.C.},
	keywords = {security},
	author = {Sarah Meiklejohn and C. Chris Erway and Alptekin K\"{u}p\c{c}\"{u} and Theodora Hinkle and Anna Lysyanskaya}
}

@article{Brassard:1988:MDP:53813.53817,
 author = {Brassard, Gilles and Chaum, David and Cr\'{e}peau, Claude},
 title = {Minimum disclosure proofs of knowledge},
 journal = {J. Comput. Syst. Sci.},
 volume = {37},
 issue = {2},
 month = {October},
 year = {1988},
 issn = {0022-0000},
 pages = {156--189},
 numpages = {34},
 url = {http://dl.acm.org/citation.cfm?id=53813.53817},
 doi = {10.1016/0022-0000(88)90005-0},
 acmid = {53817},
 publisher = {Academic Press, Inc.},
 address = {Orlando, FL, USA},
} 

@phdthesis{quteprints16023,
           title = {Heuristic Optimization of Boolean Functions and Substitution Boxes for Cryptography},
          school = {Queensland University of Technology},
          author = {Linda Dee Burnett},
            year = {2005},
        keywords = {boolean function, substitution box, heuristic techniques, Genetic Algorithm, Hill Climbing, cryptographic properties, autocorrelation, balance, nonlinearity, correlation immunity, resilience, propagation criteria},
             url = {http://eprints.qut.edu.au/16023/},
        abstract = {Fundamental to the electronic security of information and communication systems, is the correct use and application of appropriate ciphers. The strength of these ciphers, particularly in their ability to resist cryptanalytic attacks, directly in
uences the overall strength of the entire system. The strength of the underlying cipher is reliant upon a robust structure and the carefully designed interaction between components in its architecture. Most importantly, however, cipher strength is critically dependent on the strength of the individual components of which it is comprised.
Boolean functions and substitution boxes (s-boxes) are among the most common and essential components of ciphers. This is because they are able to provide a cipher with strengthening properties to resist known and potential cryptanalytic attacks. Thus, it is not surprising that significant research effort has been made in trying to develop ways of obtaining boolean functions and substitution boxes with
optimal achievable measures of desirable cryptographic properties. Three of the
main cryptographic properties required by strong boolean functions and s-boxes are nonlinearity, correlation immunity and propagation criteria, with different cryptographic applications requiring different acceptable measures of these and other properties. As combinations of cryptographic properties exhibited by functions
can be conicting, finding cryptographically strong functions often means that a trade-off needs to be made when optimizing property values. Throughout this thesis, the term ``optimization'' specifically refers to seeking to obtain the best achievable combination of target property values which may be exhibited by boolean functions and s-boxes, regardless of whether the relevant properties are
conflicting or complementary.
This thesis focusses on a particular class of techniques for obtaining strong functions for cryptographic applications, referred to as heuristic methods or, simply, heuristics. Three new heuristic methods, each aimed at generating boolean functions optimizing one or more of the main cryptographic properties mentioned above, in addition to other desirable properties, are presented. The first of the new heuristic methods developed for this thesis focusses on generating boolean functions which are balanced and exhibit very high nonlinearities. Highly nonlinear balanced functions are critical to many cryptographic applications, as they provide good resistance to linear cryptanalytic attacks. This first method is based on the recursive modification of a starting bent function and is shown to be highly successful and efficient at generating numerous such functions, which also exhibit low autocorrelation values, in a very short computational time.
The generation of balanced, correlation immune boolean functions that also exhibit the confl
icting property of high nonlinearity is the focus of the second new heuristic method developed for this thesis. By concatenating selected pairs of lower-dimensional boolean functions together in the Walsh Hadamard transform domain, direct optimization for both resilience and nonlinearity was able to take place at each level towards and for the final function. This second method was able to generate examples of boolean functions with almost all of the best known optimal combinations of target property values. Experiments have shown the success of this method in consistently generating highly nonlinear resilient boolean functions, for a range of orders of resilience, with such functions possessing optimal algebraic degree.
A third new heuristic method, which searches for balanced boolean functions which satisfy a non-zero degree of propagation criteria and exhibit high nonlinearity, is presented. Intelligent bit manipulations in the truth table of starting
functions, based on fundamental relationships between boolean function transforms and measures, provide the design rationale for this method. Two new function generation schemes have been proposed for this method, to efficiently
satisfy the requirements placed on the starting functions utilized in the computational
process. An optional process attempts to increase the algebraic degree of the resulting functions, without sacrificing the optimalities that are achievable. The validity of this method is demonstrated through the success of various
experimental trials.
Switching the focus from single output boolean functions to multiple output boolean functions (s-boxes), the effectiveness of existing heuristic techniques (namely Genetic Algorithm, Hill Climbing Method and combined Genetic Algorithm/Hill Climbing) in primarily being applied to improve the nonlinearity of s-boxes of various dimensions, is investigated. The prior success of these heuristic techniques for improving the nonlinearity of boolean functions has been previously demonstrated, as has the success of hill climbing in isolation when applied to bijective s-boxes. An extension to the bijective s-box optimization work is presented in this thesis. In this new research, a Genetic Algorithm, Hill Climbing Method
and the two in combination are applied to the nonlinearity and autocorrelation optimization of regular NxM s-boxes (N {\ensuremath{>}} M) to investigate the effectiveness and efficiency of each of these heuristics. A new breeding scheme, utilized in the Genetic Algorithm and combined Genetic Algorithm/Hill Climbing trials, is also presented. The success of experimental results compared to random regular s-box generation is demonstrated.
New research in applying the Hill Climbing Method to construct NxM sboxes (N {\ensuremath{>}} M) required to meet specific property criteria is presented. The consideration of the characteristics desired by the constructed s-boxes largely dictated the generation process. A discussion on the generation process of the component functions is included. Part of the results produced by experimental trials were incorporated into a commonly used family of stream ciphers, thus further supporting the use of heuristic techniques as a useful means of obtaining strong functions suitable for incorporation into practical ciphers.
An analysis of the cryptographic properties of the s-box used in the MARS block cipher, the method of generation and the computational time taken to obtain this s-box, led to the new research reported in this thesis on the generation of MARS-like s-boxes. It is shown that the application of the Hill Climbing
Method, with suitable requirements placed on the component boolean functions, was able to generate multiple MARS-like s-boxes which satisfied the MARS sbox requirements and provided additional properties. This new work represented an alternative approach to the generation of s-boxes satisfying the MARS sbox
property requirements but which are cryptographically superior and can be obtained in a fraction of the time than that which was taken to produce the MARS s-box. An example MARS-like s-box is presented in this thesis.
The overall value of heuristic methods in generating strong boolean functions and substitution boxes is clearly demonstrated in this thesis. This thesis has made several significant contributions to the field, both in the development of new, specialized heuristic methods capable of generating strong boolean functions, and in the analysis and optimization of substitution boxes, the latter achieved
through applying existing heuristic techniques.}
}

@INPROCEEDINGS{4259811,
author={Alho, T. and Hamalainen, P. and Hanikainen, M. and Hamalainen, T.D.},
booktitle={Automation Congress, 2006. WAC '06. World},
title={Design of a Compact Modular Exponentiation Accelerator for Modern FPGA Devices},
year={2006},
month={july},
volume={},
number={},
pages={1 -7},
abstract={We present a compact FPGA implementation of a modular exponentiation accelerator suited for cryptographic applications. The implementation efficiently exploits the properties of modern FPGAs. The accelerator consumes 341 logic elements, 1 DSP block, and 13604 memory bits in Altera Stratix EP1S40. It performs modular exponentiations with up to 2250-bit integers and scales easily to larger exponentiations. Excluding pre and post processing time, 1024-bit and 2048-bit exponentiations are performed in 28.03 ms and 212.09 ms, respectively. Due to its compactness, standard interface, and support for different clock domains, the accelerator can effortlessly be integrated into a larger system in the same FPGA.},
keywords={Altera Stratix EP1S40;DSP block;FPGA;clock domains;compact modular exponentiation accelerator;cryptographic applications;cryptography;digital signal processing chips;field programmable gate arrays;},
doi={10.1109/WAC.2006.375738},
ISSN={},}

@inproceedings{smartcard_crypto_coprocs,
author = {Helena Handschuh and Pascal Paillier},
title = {Smart Card Crypto-Coprocessors for Public-Key Cryptography},
booktitle = {CARDIS},
year = {1998},
pages = {372--379},
masid = {647129}
}

@incollection{smartcard_crypto_coprocs2,
author = {Helena Handschuh and Pascal Paillier},
title = {Smart Card Crypto-Coprocessors for Public-Key Cryptography},
pages= {386--394},
booktitle = {Smart Card Research and Applications},
editor = {Jean-Jeacques Quisquater and Bruce Schneier},
publisher = {Springer},
year = {2000}
}

@inproceedings{monpro_doubling,
 author = {Yoshino, Masayuki and Okeya, Katsuyuki and Vuillau Camille},
 title = {Unbridle the bit-length of a crypto-coprocessor with montgomery multiplication},
 booktitle = {Proceedings of the 13th international conference on Selected areas in cryptography},
 series = {SAC'06},
 year = {2007},
 isbn = {978-3-540-74461-0},
 location = {Montreal, Canada},
 pages = {188--202},
 numpages = {15},
 url = {http://portal.acm.org/citation.cfm?id=1756516.1756535},
 acmid = {1756535},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {RSA, crypto-coprocessor, montgomery multiplication, smartcard},
} 

@inproceedings{classic_doubling,
 author = {Fischer, Wieland and Seifert, Jean-Pierre},
 title = {Increasing the Bitlength of a Crypto-Coprocessor},
 booktitle = {Revised Papers from the 4th International Workshop on Cryptographic Hardware and Embedded Systems},
 series = {CHES '02},
 year = {2003},
 isbn = {3-540-00409-2},
 pages = {71--81},
 numpages = {11},
 url = {http://portal.acm.org/citation.cfm?id=648255.752711},
 acmid = {752711},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
 keywords = {arithmetical coprocessor, hardware architecture, hardware/software codesign, modular multiplication},
}

@incollection {llvm_general,
title="{LLVM}",
author="Chris Lattner",
pages="155--171",
booktitle="The Architecture of Open Source Applications: Elegance, Evolution, and a Few Fearless Hacks",
editor="Brown, A. and Wilson, G.",
publisher="CreativeCommons",
url="http://www.aosabook.org/en/llvm.html",
year="2011",
isbn={9781257638017}
}

@InProceedings{LLVM:CGO04,
  author    = {Chris Lattner and Vikram Adve},
  title     = "{LLVM: A Compilation Framework for Lifelong Program Analysis \& Transformation}",
  booktitle = "{Proceedings of the 2004 International Symposium on Code Generation and Optimization (CGO'04)}",
  address   = {Palo Alto, California},
  month     = {Mar},
  year      = {2004},
  url="http://llvm.org/pubs/2004-01-30-CGO-LLVM.html"
}

@article{Turing,
author = {Turing, A. M.}, 
title = {On Computable Numbers, with an Application to the Entscheidungsproblem}, 
volume = {s2-42}, 
number = {1}, 
pages = {230-265}, 
year = {1937}, 
doi = {10.1112/plms/s2-42.1.230}, 
URL = {http://plms.oxfordjournals.org/content/s2-42/1/230.short}, 
eprint = {http://plms.oxfordjournals.org/content/s2-42/1/230.full.pdf+html}, 
journal = {Proceedings of the London Mathematical Society} 
}

@book{Hopcroft,
 author = {Hopcroft, John E. and Ullman, Jeffrey D.},
 title = {Introduction To Automata Theory, Languages, And Computation},
 year = {1990},
 isbn = {020102988X},
 edition = {1st},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{Schaumont,
  author = {Patrick R. Schaumont},
  title = {A Practical Introduction to Hardware/Software Codesign},
  year = {2010},
  isbn = {978-1-4419-5999-7},
  publisher = {Springer}
}

@article{Montgomery,
author = {Peter L. Montgomery},
title = {Modular Multiplication Without Trial Division},
year = {1985},
month = {April},
volume = {44},
number = {170},
pages = {519-521},
journal = {Mathematics of Computation},
URL = {http://www.jstor.org/pss/2007970}
}

@Article{Koc,
  author = 	 {\c{C}etin Kaya Ko\c{c} and Tolga Acar and Burton S. Kaliski Jr.},
  title = 	 {Analyzing and Comparing Montgomery Multiplication Algorithms},
  journal = 	 {IEEE Micro},
  year = 	 1996,
  volume = 	 16,
  number = 	 3,
  pages = 	 {26-33},
  month = 	 {June}
}

@InProceedings{ANTLR,
  author = {Terence J. Parr and Kathleen S Fisher },
  title = {{LL(*)}: The Foundation of the {ANTLR} Parser Generator},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {{PLDI 2011}: Proceedings of the 2011 {ACM} {SIGPLAN}
                  Conference on Programming Language Design and
                  Implementation},
  OPTpages = 	 {},
  year = 	 {2011},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  OPTaddress = 	 {},
  month = 	 {June},
  organization = {ACM SIGPLAN},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@article {ANTLR2,
author = {Parr, T. J. and Quong, R. W.},
title = {{ANTLR}: A predicated-{LL(k)} parser generator},
journal = {Software: Practice and Experience},
volume = {25},
number = {7},
publisher = {John Wiley & Sons, Ltd.},
issn = {1097-024X},
url = {http://dx.doi.org/10.1002/spe.4380250705},
doi = {10.1002/spe.4380250705},
pages = {789--810},
keywords = {parsing, compiler, parser generator, predicates, LL(k) parser},
year = {1995},
abstract = {Despite the parsing power of LR/LALR algorithms, e.g. YACC, programmers often choose to write recursive-descent parsers by hand to obtain increased flexibility, better error handling, and ease of debugging. We introduce ANTLR, a public-domain parser generator that combines the flexibility of hand-coded parsing with the convenience of a parser generator, which is a component of PCCTS. ANTLR has many features that make it easier to use than other language tools. Most important, ANTLR provides predicates which let the programmer systematically direct the parse via arbitrary expressions using semantic and syntactic context; in practice, the use of predicates eliminates the need to hand-tweak the ANTLR output, even for difficult parsing problems. ANTLR also integrates the description of lexical and syntactic analysis, accepts LL(k) grammars for k > 1 with extended BNF notation, and can automatically generate abstract syntax trees.ANTLR is widely used, with over 1000 registered industrial and academic users in 37 countries. It has been ported to many popular systems such as the PC, Macintosh, and a variety of UNIX platforms; a commercial C++ front-end has been developed as a result of one of our industrial collaborations.},
}

@MISC{yaczk,
    author = {Endre Bangerter and Stephan Krenn and Ahmad-reza Sadeghi and Thomas Schneider},
    title = {YACZK: Yet Another Compiler for Zero-Knowledge ⋆ (Poster Abstract)},
    year = {}
}

@article{softeninghw,
 author = {Vahid, Frank},
 title = {The Softening of Hardware},
 journal = {Computer},
 volume = {36},
 issue = {4},
 month = {April},
 year = {2003},
 issn = {0018-9162},
 pages = {27--34},
 numpages = {8},
 url = {http://dx.doi.org/10.1109/MC.2003.1193225},
 doi = {http://dx.doi.org/10.1109/MC.2003.1193225},
 acmid = {766186},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
} 

@online{cace-proj,
title = {Computer Aided Cryptography Engineering},
url = {http://http://www.cace-project.eu/},
}

@online{gezel,
title = {GEZEL Hardware/Software Codesign Environment},
url = {http://rijndael.ece.vt.edu/gezel2/},
}

@online{llvm_ir,
title = {LLVM Language Reference Manual},
url = {http://llvm.org/docs/LangRef.html},
}

@online{antlrworks,
title = {ANTLRWorks: The ANTLR GUI Development Environment},
url = {http://www.antlr.org/works/index.html},
}

@online{extending_llvm,
title = {Extending LLVM: Adding instructions, intrinsics, types, etc.},
url = {http://llvm.org/docs/ExtendingLLVM.html}
}

  @MastersThesis{llvm_master_thesis,
    author  = {Chris Lattner},
    title   = "{LLVM: An Infrastructure for Multi-Stage Optimization}",
    school  = "{Computer Science Dept., University of Illinois at Urbana-Champaign}",
    year    = 2002,
    address = {Urbana, IL},
    month   = {Dec},
    note    = {{\em See {\texttt{http://llvm.cs.uiuc.edu}}.}}
  }

@techreport{c++_multi_methods,
  author = {Peter Pirkelbauer and Yuriy Solodkyy and Bjarne Stroustrup},
  title = {Report on language support for Multi-Methods and Open-Methods for C++.},
  year = {2007},
  number = {N2216},
  institution = {{JTC1}/{SC22}/{WG21} {C++} Standards Committee},
  url = {http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2216.pdf},
  keywords = {C++, Multi-methods, multi-dispatch}
}

@book{Eckel,
 author = {Eckel, Bruce},
 title = {Thinking in C++},
 year = {1995},
 isbn = {0-13-917709-4},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
} 
